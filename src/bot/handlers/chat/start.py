import asyncio
import datetime

from aiogram import Router, types
from aiogram.filters import Command, StateFilter, CommandStart, Text
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from bot.keyboards.menu import get_start_menu, get_chat_menu
from bot.keyboards.role import get_role_keyboard
from bot.loader import user_storage, llm
from bot.states import BotState
from models.types import BotRole
from models.types import User

router = Router()


@router.message(Text('Menu:'))
async def menu_message(message: types.Message):
    await message.delete()


@router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext):
    await message.delete()
    answer = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {message.from_user.full_name}! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n' \
             f'–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å —Å–≤–æ–µ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–æ–≤.\n' \
             f'–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help.'
    start_menu = get_start_menu()
    await message.answer(answer, reply_markup=start_menu)
    await state.set_state(BotState.START)


@router.message(Command('go_talk'), BotState.START)
async def first_choose_role(message: types.Message, state: FSMContext):
    await message.delete()
    await state.set_state(BotState.ADD_USER)
    role_keyboard = get_role_keyboard()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', reply_markup=role_keyboard)


@router.message(Command('go_talk'))
async def choose_role(message: types.Message, state: FSMContext):
    await message.delete()
    user_id = message.from_user.id
    user_data: User = await user_storage.get_user_data(user_id)
    role_name = user_data['bot_role']
    if user_data:
        await state.set_state(BotState.CHAT)
        await message.answer(f'C –≤–æ–∑—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.username}.\n'
                             f'–í—ã –æ–±—â–∞–µ—Ç–µ—Å—å —Å {role_name}.')
    else:
        return


@router.callback_query(StateFilter(BotState.ADD_USER))
async def add_user(callback: CallbackQuery, state: FSMContext):
    role_name = callback.data
    role = BotRole.__getitem__(role_name)
    user = User(
        _id=callback.from_user.id,
        name=callback.from_user.full_name,
        created_ad=datetime.datetime.utcnow(),
        history=[await llm.get_start_message_by_role(role)],
        output_type='text',
        bot_role=role_name
    )
    await user_storage.create_user(user)
    await callback.answer(text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {callback.data}.')
    await state.set_state(BotState.CHAT)
    await callback.message.delete()
    await callback.message.answer(f'–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —Ä–æ–ª–∏ {role_name} –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É!üé±')


@router.message(Command('menu'), BotState.CHAT)
async def cmd_menu(message: types.Message):
    await message.delete()
    chat_menu = get_chat_menu()
    msg = await message.answer('Menu:', reply_markup=chat_menu)
    await asyncio.sleep(16)
    await msg.delete()


@router.message(Command('menu'))
async def cmd_menu(message: types.Message):
    await message.delete()
    start_menu = get_start_menu()
    msg = await message.answer('Menu:', reply_markup=start_menu)
    await asyncio.sleep(8)
    await msg.delete()


@router.message(Command('help'), StateFilter(BotState.CHAT, BotState.START))
async def cmd_help(message: types.Message):
    await message.delete()
    await message.answer(
        '–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n'
        '/go_talk - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.\n'
        '/set_role - –í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å –±–æ—Ç–∞.\n'
        '/set_output - –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–æ–≤.\n'
        '/get_user_info - –ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n'
        '/help - –ü–æ–º–æ—â—å!'
    )
