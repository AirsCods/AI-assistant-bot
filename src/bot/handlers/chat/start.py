import datetime

from aiogram import Router, types
from aiogram.filters import StateFilter, CommandStart, Text, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from bot.keyboards import get_chat_menu, get_role_keyboard
from bot.loader import user_storage, llm, prompt_storage
from bot.states import BotState
from models.types import User, Prompt

router = Router()


# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞.
@router.message(CommandStart())
async def cmd_start(message: types.Message, state: FSMContext):
    await state.set_state(BotState.ADD_USER)
    await message.delete()

    answer = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {message.from_user.full_name}! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n' \
             f'–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:\n'
    prompts = await prompt_storage.get_all_prompt()

    role_keyboard = get_role_keyboard(prompts)
    await message.answer(answer, reply_markup=role_keyboard)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.
@router.callback_query(StateFilter(BotState.ADD_USER))
async def add_user(callback: CallbackQuery, state: FSMContext):
    await state.set_state(BotState.CHAT)
    await callback.message.delete()
    role_name = callback.data
    prompt_obj: Prompt = await prompt_storage.get_prompt(role_name)
    prompt = prompt_obj['prompt']
    start_message = await llm.get_start_message_by_role(prompt)

    user = User(
        _id=callback.from_user.id,
        name=callback.from_user.full_name,
        created_ad=datetime.datetime.utcnow(),
        history=[start_message],
        output_type='text',
        bot_role=role_name,
        state=BotState.CHAT.state
    )

    await user_storage.create_user(user)
    await callback.answer(text=f'–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —Ä–æ–ª–∏ {role_name} –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É!üé±', show_alert=True)
    await callback.message.answer(f'–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —Ä–æ–ª–∏ {role_name} –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É!üé±')


# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
@router.message(Command('go'), BotState.CHAT)
async def cmd_go_chat(message: types.Message):
    await message.delete()
    chat_menu = get_chat_menu()
    await message.answer('C–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:', reply_markup=chat_menu)


# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
@router.message(Command('go'))
async def cmd_go_all(message: types.Message, state: FSMContext):
    await message.delete()
    user_id = message.from_user.id
    user_data: User = await user_storage.get_user_data(user_id)
    if user_data:
        role_name = user_data['bot_role']
        await state.set_state(BotState.CHAT)
        await message.answer(f'C –≤–æ–∑—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.username}.\n'
                             f'–í—ã –æ–±—â–∞–µ—Ç–µ—Å—å —Å {role_name}.')
    else:
        await message.answer(f'–ú—ã —Å –≤–∞–º–∏ –Ω–µ –∑–Ω–∞–∫–æ–º—ã {message.from_user.first_name}\n'
                             f' –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.')


@router.callback_query(Text('help'), StateFilter(BotState.CHAT))
async def cmd_help(callback: CallbackQuery):
    await callback.message.delete()
    await callback.answer()
    await callback.message.answer(
        '–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n'
        '/go - –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é.\n'
        '/help - –ü–æ–º–æ—â—å!'
    )
